<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="refreshButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABF5JREFUaEPtmF1MWmcYx5nWD4RqoWojUrWt4Ff1xt3O3S/L0psuVqx2QBWRKqKi
        xotmN7v1bh/Z1bZkSU0cyJfgQU6hu5peLk296ZK1TXrXJixr0mjfPQ95TiOHw6wcBLrxT34B3vf//p/n
        PYfDx1GUVVZZZf0PZNrQKz7f8NKr90jX1ysrhjecFcO/JAFGo++HqkY8gxXDnr3KGx4mQFMlruvr6sob
        3rUzI94DgB2FHKWr6lHPtaoR75Nqk5dJAZtrIGtpSQkXaY3J660Z3WTH8He1afOHWpPnI1paZMFFCkd2
        tvbmZhJgJ+SRctQ7hxmUVngpb/q+qxvzMTkox3x+xWhERZEFFhw91Zh/tm7cn1SN+1nu+HZVls0LlFp4
        Ka0hPTTiVd/ys+M4mwWYe6we93VTZHEEDVyDZp7UfxFgueHfV0zsVVFccdRkX1fXm4NrDebgAcBEhCXG
        xLgoqrhqsAYGNebgnsYSZAI4rrGEPtFYAn8cHU/DHHipskWaUyFFF1zkWmvICY0l4fHtN/E5c6Bdaw3+
        iWNZ+J6spSFoSK+9HUr7NdpoDRphE8nzt0MsA2voUDvpbyVr6apxIvRV08QWk6LRGv6UbKUrvSWsbZ7Y
        SjZPhpmYpsmtFbKVtpont2IXbGEmwc9kkS+dbfuzFlvkm5ap8LdvsUW+1N4J1ZMlZ7VMRb4GWAa2yO9k
        ka8We/ilzh5hGdgi02TJWbqp8KpUNtR8RRb50k1HnrZObzMxOvv2T2TJWXrI0EOWmFaoSRb5uujY/u2i
        g2Ni9A7uIVlyFmZIZWNNsshXm4O713aHYxk4uMOuxV/Pku3EwrWYkSX7Htnkq90RvdU+E2VStM1wa2Q7
        sTpgbQdkSIE1ySZfRhffeGk2egCwTLg3HbM7Q2R9Z+EaXCudGT3AmmTNjy47d/wAy8Jjg5O7TNZjhV5c
        I8o4ip+s+dOlmehApzN22DkXY1Jcccb+6nRGbWTPKvSkvBIZKaAG1iJ7fmWYi/1ocMXYvwFNxME3b5jf
        Geq182oEn+NYak5iTRpQg8rlX/3LDzSGeX7fOM+zd8LFH6aQmhOzwDPDAr+PNajc6ajbxRm7FmIvuqGg
        LBbvp9G1eP9FtythpDKnq65F/sOeBf5ZDxSWjRvhn2EmxRdG8CWk63HHd3vdcXYS+pbS6V2K72IWxRZW
        H9/lz/S5+ak+d/z5VWgmK8uZQPPPcS1mUFzx1HuXV/cvJ+zQLAfNve5fSTAprq7EXwMcenENLS8tDS5x
        Df2r8aGBlcTwwGrClQKe4xjOka2ssv4L+gCoAPD+PoKfJgje2zwOwYvrMAPBvFOR0KjQXDVQAyiBOgDv
        7eMnCv6xwT/5eKEi5yQQ5tCHflyH6zEH8zAX84VNyt6YuHksUAtgMaFxoWlsUAucB/C3fBOA9zjxvj8+
        4mscx3n0CRvC9cJGMBfzsQ7WE85Q3oQbEjYlftsIZ0bYoHB2hCMsHGWhwaNHOse3kkLxD+gbMboGH4qy
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>